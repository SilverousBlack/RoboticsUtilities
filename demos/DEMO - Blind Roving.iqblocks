{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"-10\"><next><block type=\"iq_control_forever\" id=\"^feHou6,F{+=~3*D(}@3\"><statement name=\"SUBSTACK\"><block type=\"iq_control_while\" id=\":33/9ihUYiPN-}fUzPx%\"><value name=\"CONDITION\"><block type=\"iq_operator_or\" id=\"tGbGY=6lTf(9D/AIJv__\"><value name=\"OPERAND1\"><block type=\"iq_operator_greater_than\" id=\"gCyk;6@B#Ue+)8^+Ow=!\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"s|%`j]kgS+,p8Fh%|3A9\"><field name=\"NUM\"></field></shadow><block type=\"iq_sensing_distance_from\" id=\"c/9;52|//+7m]Xag,1Ol\"><field name=\"SONAR\">Distance_Sensor</field><field name=\"UNITS\">mm</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"Z;.0)Y@jP.pFkWmCp;J9\"><field name=\"NUM\">150</field></shadow></value></block></value><value name=\"OPERAND2\"><block type=\"iq_operator_equal_to\" id=\"a;qd_7fSr9$M]-F+(n@~\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"!DJ/LfR^{Z^$VdBgrE,3\"><field name=\"NUM\"></field></shadow><block type=\"iq_sensing_distance_from\" id=\"zL*yCl$q^HEJq6Cmju[/\"><field name=\"SONAR\">Distance_Sensor</field><field name=\"UNITS\">mm</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"J-l=u|n7_}V7euDb9j9c\"><field name=\"NUM\">150</field></shadow></value></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_drivetrain_drive\" id=\"d-ItGWe^6V:r?Z{G+Y|I\"><field name=\"DIRECTION\">fwd</field></block></statement><next><block type=\"iq_control_if_then\" id=\"$VB=yfy;rhv+40Nr2z3k\"><value name=\"CONDITION\"><block type=\"iq_operator_less_than\" id=\"mD({#u|{,X[BTKM#m.5S\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"GwhqHD!zza.gHCMAft`f\"><field name=\"NUM\"></field></shadow><block type=\"iq_sensing_distance_from\" id=\"]!z)+DV_SJfM;$MT%p]7\"><field name=\"SONAR\">Distance_Sensor</field><field name=\"UNITS\">mm</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"YE6m);Rh*vL/x!,74pvL\"><field name=\"NUM\">150</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_drivetrain_turn_for\" id=\"Rb(M0?L+|F%#Q*BT]@Rs\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"4nJ^vA^UCq0X_Z2#Ki]j\"><field name=\"NUM\">90</field></shadow></value></block></statement></block></next></block></statement></block></next></block></xml>","rconfig":[{"port":[1,6,4],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"smart","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"}},{"port":[7],"name":"Distance_Sensor","customName":true,"deviceType":"Distance","deviceClass":"sonar","setting":{}}],"slot":0,"platform":"IQ","sdkVersion":"20220726.10.00.00","appVersion":"2.4.4","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT6, 1, true);\ngyro DrivetrainGyro = gyro(PORT4, true);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainGyro, 200);\n\nsonar Distance_Sensor = sonar(PORT7);\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Gyro\");\n  DrivetrainGyro.calibrate();\n  while (DrivetrainGyro.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  while (true) {\n    while ((Distance_Sensor.distance(mm) > 150.0 || Distance_Sensor.distance(mm) == 150.0)) {\n      Drivetrain.drive(forward);\n    wait(20, msec);\n    }\n    if (Distance_Sensor.distance(mm) < 150.0) {\n      Drivetrain.turnFor(right, 90.0, degrees);\n    }\n  wait(20, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // Calibrate the Drivetrain Gyro\n  calibrateDrivetrain();\n\n  whenStarted1();\n}","target":"Physical"}