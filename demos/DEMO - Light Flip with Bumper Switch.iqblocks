{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"boolean\" id=\"V0e0WjB]0P*B!^e9n9vK\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">MakeABoolean</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"-10\"><next><block type=\"iq_variables_set_boolean_variable\" id=\"~:KWLXxrk:!{qojU@zfw\"><field name=\"VARIABLE\" id=\"V0e0WjB]0P*B!^e9n9vK\" variabletype=\"boolean\">MakeABoolean</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"y|_hp-yj{1XP`J2S!(Nt\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_control_forever\" id=\"ji|#Y#7{c,EX-BsP4NVm\"><statement name=\"SUBSTACK\"><block type=\"iq_control_if_then\" id=\"p!2|h[dsqam%NQ;Tk3[d\"><value name=\"CONDITION\"><block type=\"iq_sensing_pressing_bumper\" id=\"WfdsSW0WPbgMx3L|I[3O\"><field name=\"BUMPER\">Bump_Switch</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_variables_set_boolean_variable\" id=\"T14Q@+c_^FMYg970@,A#\"><field name=\"VARIABLE\" id=\"V0e0WjB]0P*B!^e9n9vK\" variabletype=\"boolean\">MakeABoolean</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"`h#iU|GetCsUY9xuC4)0\"><field name=\"VALUE\">true</field></shadow><block type=\"iq_operator_not\" id=\"1.Ui-1z)n4N5Xyaz{t`Q\"><value name=\"OPERAND\"><block type=\"iq_variables_boolean_variable\" id=\"6F}~M#opNfOTuk%m6XV7\"><field name=\"VARIABLE\" id=\"V0e0WjB]0P*B!^e9n9vK\" variabletype=\"boolean\">MakeABoolean</field></block></value></block></value></block></statement><next><block type=\"iq_control_if_then_else\" id=\"PYzl,xv[Uq!Yb(Y+;DcC\"><value name=\"CONDITION\"><block type=\"iq_variables_boolean_variable\" id=\"L8XLVD98Z*]aE2XKui1Z\"><field name=\"VARIABLE\" id=\"V0e0WjB]0P*B!^e9n9vK\" variabletype=\"boolean\">MakeABoolean</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_looks_set_color_sensor_brightness\" id=\"*qVy4*~m|q}=|Ky*Hyef\"><field name=\"COLORSENSOR\">Color_Detector</field><value name=\"LEVEL\"><shadow type=\"math_whole_number\" id=\"*`6/2]E/gz|SeHlwjU_7\"><field name=\"NUM\">50</field></shadow></value></block></statement><statement name=\"SUBSTACK2\"><block type=\"iq_looks_set_color_sensor_brightness\" id=\"12+U[5w(s.FKnM%X:wN}\"><field name=\"COLORSENSOR\">Color_Detector</field><value name=\"LEVEL\"><shadow type=\"math_whole_number\" id=\"pE%y]+Mxb(#OU?lPxg-*\"><field name=\"NUM\">0</field></shadow></value></block></statement></block></next></block></statement></block></next></block></next></block></xml>","rconfig":[{"port":[8],"name":"Bump_Switch","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{}},{"port":[3],"name":"Color_Detector","customName":true,"deviceType":"Color","deviceClass":"colorsensor","setting":{}}],"slot":0,"platform":"IQ","sdkVersion":"20220726.10.00.00","appVersion":"2.4.4","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\nbumper Bump_Switch = bumper(PORT8);\ncolorsensor Color_Detector = colorsensor(PORT3);\n\n\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\nbool MakeABoolean;\n\n// \"when started\" hat block\nint whenStarted1() {\n  MakeABoolean = true;\n  while (true) {\n    if (Bump_Switch.pressing()) {\n      MakeABoolean = !MakeABoolean;\n    }\n    if (MakeABoolean) {\n      Color_Detector.setLight(50, percent);\n    }\n    else {\n      Color_Detector.setLight(0, percent);\n    }\n  wait(20, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  whenStarted1();\n}","target":"Physical"}